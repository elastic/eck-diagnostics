apiVersion: v1
kind: Pod
metadata:
  name: {{ .PodName }}
  namespace: {{ .Namespace }}
  labels:
    app.kubernetes.io/name: eck-diagnostics
spec:
  terminationGracePeriodSeconds: 0
  initContainers:
    - name: diagnostics
      # image built as described in https://github.com/elastic/support-diagnostics#creating-a-docker-image
      image: {{ .DiagnosticImage }}
      imagePullPolicy: IfNotPresent
      env:
        - name: ES_PW
          valueFrom:
            secretKeyRef:
              name: {{ .ESName }}-es-elastic-user
              key: elastic
      command: [sh, -c]
      args:
        - ./diagnostics.sh -h {{.SVCName}} --type {{.Type}} --bypassDiagVerify -u elastic --passwordText $ES_PW {{if .TLS}}-s --noVerify{{end}} -o {{ .OutputDir }}
      resources:
        requests:
          memory: 20Mi
          cpu: 100m
        limits:
          memory: 2Gi
          cpu: 1
      volumeMounts:
        - name: output
          mountPath: {{ .OutputDir }}
  containers:
    - name: {{ .MainContainerName }}
      image: {{ .DiagnosticImage }}
      volumeMounts:
        - name: output
          mountPath: {{ .OutputDir }}
      command: [sh, -c]
      # diagnostics run in an initContainer. When the Pod becomes ready we know we can retrieve them, so we just wait here
      # for a client copying the result
      args:
        - |
          while true; do sleep 1; done;
      resources:
        requests:
          memory: 16Mi
          cpu: 50m
        limits:
          memory: 16Mi
          cpu: 50m
  volumes:
    - name: output
      emptyDir: {}
  restartPolicy: Never
